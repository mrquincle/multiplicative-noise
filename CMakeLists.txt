##########################################################################################
#     _                    _ ______ _ _       
#    | |                  | (_____ (_) |      
#     \ \   ____ ____   _ | |_____) )| | ____ 
#      \ \ / _  |  _ \ / || |  ____/ | |/ _  )
#  _____) | ( | | | | ( (_| | |    | | ( (/ / 
# (______/ \_||_|_| |_|\____|_|    |_|_|\____)
#                                              
##########################################################################################
# 
# SandPile simulator, the prototypical toys of theoretical physicists to study self-
# organised criticality. 
#
# The code falls under the Lesser General Public License (LGPL GNU v3).

# Author:	 Anne C. van Rossum (Almende B.V.)
# Date: 	 Oct 28, 2010
#
# ASCII Art generated by: http://www.network-science.de/ascii/ with font "stop".
#
# Copyright Â© 2010 Anne van Rossum <anne@almende.com>
##########################################################################################

IF(WIN32)
cmake_minimum_required(VERSION 2.6)
ELSE(WIN32)
cmake_minimum_required(VERSION 2.4)
ENDIF(WIN32)

# The directory with all the FindXXX modules
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")

# The macro below forces the build directory to be different from source directory:
INCLUDE( MacroEnsureOutOfSourceBuild )
MACRO_ENSURE_OUT_OF_SOURCE_BUILD(
	"${PROJECT_NAME} requires an out of source build."
)

# Main binary name
SET(PROJECT_NAME "Integration")

# Start a project.
PROJECT(${PROJECT_NAME})

# Find packages
FIND_PACKAGE(Boost REQUIRED COMPONENTS thread)

# Header files
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PLplot_INCLUDE_DIR})

# Shared libraries
SET(LIBS ${LIBS} ${Boost_LIBRARIES})
SET(LIBS ${LIBS} ${PLplot_cxx_LIBRARY})

# Some debug information
MESSAGE("${PROJECT_NAME} is using CXX flags: ${CMAKE_CXX_FLAGS}")
MESSAGE ("Libraries included: ${LIBS}")

# Search for source code.
FILE(GLOB all_source src/*.cpp src/*.cc src/*.c)
FILE(GLOB all_headers inc/*.h inc/*.hpp)

SOURCE_GROUP("Source files for SandPile" FILES ${all_source})
SOURCE_GROUP("Header Files" FILES ${all_headers})

# Automatically add include directories if needed.
FOREACH(header_file ${all_headers})
  GET_FILENAME_COMPONENT(p ${header_file} PATH)
  INCLUDE_DIRECTORIES(${p})
ENDFOREACH(header_file ${all_headers})

# Testing
# enable_testing()
# add_subdirectory(harness)

# Set up our executable.
ADD_EXECUTABLE(${PROJECT_NAME} ${all_source} ${all_headers})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS})
install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)   



